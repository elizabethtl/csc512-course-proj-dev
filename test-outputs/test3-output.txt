Tracing variable defined by instruction:   %cmp = icmp eq %struct.node* %0, null, !dbg !29
Tracing variable defined by instruction:   %0 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !27
	Variable originates from an alloca:   %S.addr = alloca %struct.node*, align 8
	Value has name: 1, value name: S.addr
	findDefUseChains()
Tracing variable defined by instruction:   %4 = load %struct.node*, %struct.node** %next, align 8, !dbg !46
Tracing variable defined by instruction:   %next = getelementptr inbounds %struct.node, %struct.node* %3, i32 0, i32 2, !dbg !46
Tracing variable defined by instruction:   %3 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !45
	Variable originates as a function argument: %struct.node* %S
	Value has name: 1, value name: S
	findDefUseChains()
Tracing variable defined by instruction:   %cmp1 = icmp ne %struct.node* %1, null, !dbg !40
Tracing variable defined by instruction:   %cmp = icmp ne %struct.node* %2, null, !dbg !36
Tracing variable defined by instruction:   %2 = load %struct.node*, %struct.node** %p, align 8, !dbg !35
	Variable originates from an alloca:   %p = alloca %struct.node*, align 8
	Value has name: 1, value name: p
	Location: /home/elizabeth/Documents/csc512/project/csc512-course-proj/test3-snake-game.c:38:12
	findDefUseChains()
Tracing variable defined by instruction:   %5 = load %struct.node*, %struct.node** %next, align 8, !dbg !41
Tracing variable defined by instruction:   %next = getelementptr inbounds %struct.node, %struct.node* %4, i32 0, i32 2, !dbg !41
Tracing variable defined by instruction:   %4 = load %struct.node*, %struct.node** %p, align 8, !dbg !40
Tracing variable defined by instruction:   %1 = load %struct.node*, %struct.node** %0, align 8, !dbg !31
Tracing variable defined by instruction:   %0 = load %struct.node**, %struct.node*** %S.addr, align 8, !dbg !30
	Variable originates from an alloca:   %S.addr = alloca %struct.node**, align 8
	Value has name: 1, value name: S.addr
	findDefUseChains()
	Variable originates as a function argument: %struct.node** %S
	Value has name: 1, value name: S
	findDefUseChains()
Tracing variable defined by instruction:   %cmp = icmp ne %struct.node* %6, null, !dbg !43
Tracing variable defined by instruction:   %6 = load %struct.node*, %struct.node** %p, align 8, !dbg !41
	Variable originates from an alloca:   %p = alloca %struct.node*, align 8
	Value has name: 1, value name: p
	Location: /home/elizabeth/Documents/csc512/project/csc512-course-proj/test3-snake-game.c:53:17
	findDefUseChains()
Tracing variable defined by instruction:   %14 = load %struct.node*, %struct.node** %next5, align 8, !dbg !61
Tracing variable defined by instruction:   %next5 = getelementptr inbounds %struct.node, %struct.node* %13, i32 0, i32 2, !dbg !61
Tracing variable defined by instruction:   %13 = load %struct.node*, %struct.node** %p, align 8, !dbg !60
Tracing variable defined by instruction:   %5 = load %struct.node*, %struct.node** %next, align 8, !dbg !39
Tracing variable defined by instruction:   %next = getelementptr inbounds %struct.node, %struct.node* %4, i32 0, i32 2, !dbg !39
Tracing variable defined by instruction:   %4 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !38
	Variable originates from an alloca:   %S.addr = alloca %struct.node*, align 8
	Value has name: 1, value name: S.addr
	findDefUseChains()
	Variable originates as a function argument: %struct.node* %S
	Value has name: 1, value name: S
	findDefUseChains()
Tracing variable defined by instruction:   %cmp2 = icmp eq i32 %8, %9, !dbg !50
Tracing variable defined by instruction:   %8 = load i32, i32* %x1, align 8, !dbg !48
Tracing variable defined by instruction:   %x1 = getelementptr inbounds %struct.node, %struct.node* %7, i32 0, i32 0, !dbg !48
Tracing variable defined by instruction:   %9 = load i32, i32* %xt, align 4, !dbg !49
	Variable originates from an alloca:   %xt = alloca i32, align 4
	Value has name: 1, value name: xt
	Location: /home/elizabeth/Documents/csc512/project/csc512-course-proj/test3-snake-game.c:51:9
	findDefUseChains()
Tracing variable defined by instruction:   %1 = load i32, i32* %x, align 8, !dbg !30
Tracing variable defined by instruction:   %x = getelementptr inbounds %struct.node, %struct.node* %0, i32 0, i32 0, !dbg !30
Tracing variable defined by instruction:   %cmp4 = icmp eq i32 %11, %12, !dbg !55
Tracing variable defined by instruction:   %11 = load i32, i32* %y3, align 4, !dbg !53
Tracing variable defined by instruction:   %y3 = getelementptr inbounds %struct.node, %struct.node* %10, i32 0, i32 1, !dbg !53
Tracing variable defined by instruction:   %12 = load i32, i32* %yt, align 4, !dbg !54
	Variable originates from an alloca:   %yt = alloca i32, align 4
	Value has name: 1, value name: yt
	Location: /home/elizabeth/Documents/csc512/project/csc512-course-proj/test3-snake-game.c:52:9
	findDefUseChains()
Tracing variable defined by instruction:   %3 = load i32, i32* %y, align 4, !dbg !34
Tracing variable defined by instruction:   %y = getelementptr inbounds %struct.node, %struct.node* %2, i32 0, i32 1, !dbg !34
Tracing variable defined by instruction:   %cmp = icmp eq %struct.node* %1, null, !dbg !37
Tracing variable defined by instruction:   %1 = load %struct.node*, %struct.node** %nS, align 8, !dbg !35
	Variable originates from an alloca:   %nS = alloca %struct.node*, align 8
	Value has name: 1, value name: nS
	Location: /home/elizabeth/Documents/csc512/project/csc512-course-proj/test3-snake-game.c:65:12
	findDefUseChains()
Tracing variable defined by instruction:   %0 = bitcast i8* %call to %struct.node*, !dbg !34
  called function: malloc
Tracing variable defined by instruction:   %call = call noalias i8* @malloc(i64 noundef 16) #5, !dbg !33
  called function: malloc
Tracing variable defined by instruction:   %cmp4 = icmp eq %struct.node* %6, null, !dbg !53
Tracing variable defined by instruction:   %6 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !51
	Variable originates from an alloca:   %S.addr = alloca %struct.node*, align 8
	Value has name: 1, value name: S.addr
	findDefUseChains()
	Variable originates as a function argument: %struct.node* %S
	Value has name: 1, value name: S
	findDefUseChains()
Tracing variable defined by instruction:   %cmp = icmp eq %struct.node* %0, null, !dbg !29
Tracing variable defined by instruction:   %0 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !27
	Variable originates from an alloca:   %S.addr = alloca %struct.node*, align 8
	Value has name: 1, value name: S.addr
	findDefUseChains()
	Variable originates as a function argument: %struct.node* %S
	Value has name: 1, value name: S
	findDefUseChains()
Tracing variable defined by instruction:   %cmp1 = icmp eq %struct.node* %3, null, !dbg !38
Tracing variable defined by instruction:   %3 = load %struct.node*, %struct.node** %next, align 8, !dbg !37
Tracing variable defined by instruction:   %next = getelementptr inbounds %struct.node, %struct.node* %2, i32 0, i32 2, !dbg !37
Tracing variable defined by instruction:   %cmp6 = icmp ne %struct.node* %9, null, !dbg !56
Tracing variable defined by instruction:   %9 = load %struct.node*, %struct.node** %next5, align 8, !dbg !55
Tracing variable defined by instruction:   %next5 = getelementptr inbounds %struct.node, %struct.node* %8, i32 0, i32 2, !dbg !55
Tracing variable defined by instruction:   %8 = load %struct.node*, %struct.node** %next4, align 8, !dbg !54
Tracing variable defined by instruction:   %next4 = getelementptr inbounds %struct.node, %struct.node* %7, i32 0, i32 2, !dbg !54
Tracing variable defined by instruction:   %7 = load %struct.node*, %struct.node** %p, align 8, !dbg !51
	Variable originates from an alloca:   %p = alloca %struct.node*, align 8
	Value has name: 1, value name: p
	Location: /home/elizabeth/Documents/csc512/project/csc512-course-proj/test3-snake-game.c:103:16
	findDefUseChains()
Tracing variable defined by instruction:   %11 = load %struct.node*, %struct.node** %next7, align 8, !dbg !59
Tracing variable defined by instruction:   %next7 = getelementptr inbounds %struct.node, %struct.node* %10, i32 0, i32 2, !dbg !59
Tracing variable defined by instruction:   %10 = load %struct.node*, %struct.node** %p, align 8, !dbg !58
Tracing variable defined by instruction:   %cmp = icmp eq i32 %conv, 78, !dbg !32
Tracing variable defined by instruction:   %conv = sext i8 %0 to i32, !dbg !30
Tracing variable defined by instruction:   %0 = load i8, i8* %direction.addr, align 1, !dbg !30
	Variable originates from an alloca:   %direction.addr = alloca i8, align 1
	Value has name: 1, value name: direction.addr
	findDefUseChains()
	Variable originates as a function argument: i8 %direction
	Value has name: 1, value name: direction
	findDefUseChains()
Tracing variable defined by instruction:   %cmp2 = icmp eq i32 %2, 0, !dbg !38
Tracing variable defined by instruction:   %2 = load i32, i32* %y, align 4, !dbg !37
Tracing variable defined by instruction:   %y = getelementptr inbounds %struct.node, %struct.node* %1, i32 0, i32 1, !dbg !37
Tracing variable defined by instruction:   %1 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !34
	Variable originates from an alloca:   %S.addr = alloca %struct.node*, align 8
	Value has name: 1, value name: S.addr
	findDefUseChains()
  called function: destroy
  called function: remove_tail
Tracing variable defined by instruction:   %call64 = call %struct.node* @remove_tail(%struct.node* noundef %51), !dbg !159
  called function: remove_tail
Tracing variable defined by instruction:   %51 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !158
  called function: insert_head
Tracing variable defined by instruction:   %call63 = call %struct.node* @insert_head(%struct.node* noundef %46, i32 noundef %sub61, i32 noundef %50), !dbg !156
  called function: insert_head
Tracing variable defined by instruction:   %46 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !149
Tracing variable defined by instruction:   %sub61 = sub nsw i32 %48, 1, !dbg !153
Tracing variable defined by instruction:   %48 = load i32, i32* %x60, align 8, !dbg !152
Tracing variable defined by instruction:   %x60 = getelementptr inbounds %struct.node, %struct.node* %47, i32 0, i32 0, !dbg !152
Tracing variable defined by instruction:   %47 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !151
Tracing variable defined by instruction:   %50 = load i32, i32* %y62, align 4, !dbg !155
Tracing variable defined by instruction:   %y62 = getelementptr inbounds %struct.node, %struct.node* %49, i32 0, i32 1, !dbg !155
Tracing variable defined by instruction:   %49 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !154
  called function: remove_tail
Tracing variable defined by instruction:   %call58 = call %struct.node* @remove_tail(%struct.node* noundef %45), !dbg !146
  called function: remove_tail
Tracing variable defined by instruction:   %45 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !145
  called function: insert_head
Tracing variable defined by instruction:   %call57 = call %struct.node* @insert_head(%struct.node* noundef %42, i32 noundef 9, i32 noundef %44), !dbg !143
  called function: insert_head
Tracing variable defined by instruction:   %42 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !139
Tracing variable defined by instruction:   %44 = load i32, i32* %y56, align 4, !dbg !142
Tracing variable defined by instruction:   %y56 = getelementptr inbounds %struct.node, %struct.node* %43, i32 0, i32 1, !dbg !142
Tracing variable defined by instruction:   %43 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !141
  called function: remove_tail
Tracing variable defined by instruction:   %call45 = call %struct.node* @remove_tail(%struct.node* noundef %38), !dbg !126
  called function: remove_tail
Tracing variable defined by instruction:   %38 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !125
  called function: insert_head
Tracing variable defined by instruction:   %call44 = call %struct.node* @insert_head(%struct.node* noundef %33, i32 noundef %add42, i32 noundef %37), !dbg !123
  called function: insert_head
Tracing variable defined by instruction:   %33 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !116
Tracing variable defined by instruction:   %add42 = add nsw i32 %35, 1, !dbg !120
Tracing variable defined by instruction:   %35 = load i32, i32* %x41, align 8, !dbg !119
Tracing variable defined by instruction:   %x41 = getelementptr inbounds %struct.node, %struct.node* %34, i32 0, i32 0, !dbg !119
Tracing variable defined by instruction:   %34 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !118
Tracing variable defined by instruction:   %37 = load i32, i32* %y43, align 4, !dbg !122
Tracing variable defined by instruction:   %y43 = getelementptr inbounds %struct.node, %struct.node* %36, i32 0, i32 1, !dbg !122
Tracing variable defined by instruction:   %36 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !121
  called function: remove_tail
Tracing variable defined by instruction:   %call39 = call %struct.node* @remove_tail(%struct.node* noundef %32), !dbg !113
  called function: remove_tail
Tracing variable defined by instruction:   %32 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !112
  called function: insert_head
Tracing variable defined by instruction:   %call38 = call %struct.node* @insert_head(%struct.node* noundef %29, i32 noundef 0, i32 noundef %31), !dbg !110
  called function: insert_head
Tracing variable defined by instruction:   %29 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !106
Tracing variable defined by instruction:   %31 = load i32, i32* %y37, align 4, !dbg !109
Tracing variable defined by instruction:   %y37 = getelementptr inbounds %struct.node, %struct.node* %30, i32 0, i32 1, !dbg !109
Tracing variable defined by instruction:   %30 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !108
  called function: remove_tail
Tracing variable defined by instruction:   %call26 = call %struct.node* @remove_tail(%struct.node* noundef %25), !dbg !93
  called function: remove_tail
Tracing variable defined by instruction:   %25 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !92
  called function: insert_head
Tracing variable defined by instruction:   %call25 = call %struct.node* @insert_head(%struct.node* noundef %20, i32 noundef %22, i32 noundef %add), !dbg !90
  called function: insert_head
Tracing variable defined by instruction:   %20 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !83
Tracing variable defined by instruction:   %22 = load i32, i32* %x23, align 8, !dbg !86
Tracing variable defined by instruction:   %x23 = getelementptr inbounds %struct.node, %struct.node* %21, i32 0, i32 0, !dbg !86
Tracing variable defined by instruction:   %21 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !85
Tracing variable defined by instruction:   %add = add nsw i32 %24, 1, !dbg !89
Tracing variable defined by instruction:   %24 = load i32, i32* %y24, align 4, !dbg !88
Tracing variable defined by instruction:   %y24 = getelementptr inbounds %struct.node, %struct.node* %23, i32 0, i32 1, !dbg !88
Tracing variable defined by instruction:   %23 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !87
  called function: remove_tail
Tracing variable defined by instruction:   %call21 = call %struct.node* @remove_tail(%struct.node* noundef %19), !dbg !80
  called function: remove_tail
Tracing variable defined by instruction:   %19 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !79
  called function: insert_head
Tracing variable defined by instruction:   %call20 = call %struct.node* @insert_head(%struct.node* noundef %16, i32 noundef %18, i32 noundef 0), !dbg !77
  called function: insert_head
Tracing variable defined by instruction:   %16 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !73
Tracing variable defined by instruction:   %18 = load i32, i32* %x19, align 8, !dbg !76
Tracing variable defined by instruction:   %x19 = getelementptr inbounds %struct.node, %struct.node* %17, i32 0, i32 0, !dbg !76
Tracing variable defined by instruction:   %17 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !75
  called function: remove_tail
Tracing variable defined by instruction:   %call9 = call %struct.node* @remove_tail(%struct.node* noundef %12), !dbg !60
  called function: remove_tail
Tracing variable defined by instruction:   %12 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !59
  called function: insert_head
Tracing variable defined by instruction:   %call8 = call %struct.node* @insert_head(%struct.node* noundef %7, i32 noundef %9, i32 noundef %sub), !dbg !57
  called function: insert_head
Tracing variable defined by instruction:   %7 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !50
Tracing variable defined by instruction:   %9 = load i32, i32* %x6, align 8, !dbg !53
Tracing variable defined by instruction:   %x6 = getelementptr inbounds %struct.node, %struct.node* %8, i32 0, i32 0, !dbg !53
Tracing variable defined by instruction:   %8 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !52
Tracing variable defined by instruction:   %sub = sub nsw i32 %11, 1, !dbg !56
Tracing variable defined by instruction:   %11 = load i32, i32* %y7, align 4, !dbg !55
Tracing variable defined by instruction:   %y7 = getelementptr inbounds %struct.node, %struct.node* %10, i32 0, i32 1, !dbg !55
Tracing variable defined by instruction:   %10 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !54
  called function: remove_tail
Tracing variable defined by instruction:   %call5 = call %struct.node* @remove_tail(%struct.node* noundef %6), !dbg !47
  called function: remove_tail
Tracing variable defined by instruction:   %6 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !46
  called function: insert_head
Tracing variable defined by instruction:   %call = call %struct.node* @insert_head(%struct.node* noundef %3, i32 noundef %5, i32 noundef 9), !dbg !44
  called function: insert_head
Tracing variable defined by instruction:   %3 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !40
Tracing variable defined by instruction:   %5 = load i32, i32* %x, align 8, !dbg !43
Tracing variable defined by instruction:   %x = getelementptr inbounds %struct.node, %struct.node* %4, i32 0, i32 0, !dbg !43
Tracing variable defined by instruction:   %4 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !42
	Variable originates as a function argument: %struct.node* %S
	Value has name: 1, value name: S
	findDefUseChains()
Tracing variable defined by instruction:   %cmp12 = icmp eq i32 %conv11, 83, !dbg !65
Tracing variable defined by instruction:   %conv11 = sext i8 %13 to i32, !dbg !63
Tracing variable defined by instruction:   %cmp16 = icmp eq i32 %15, 9, !dbg !71
Tracing variable defined by instruction:   %15 = load i32, i32* %y15, align 4, !dbg !70
Tracing variable defined by instruction:   %y15 = getelementptr inbounds %struct.node, %struct.node* %14, i32 0, i32 1, !dbg !70
Tracing variable defined by instruction:   %cmp30 = icmp eq i32 %conv29, 69, !dbg !98
Tracing variable defined by instruction:   %conv29 = sext i8 %26 to i32, !dbg !96
Tracing variable defined by instruction:   %cmp34 = icmp eq i32 %28, 9, !dbg !104
Tracing variable defined by instruction:   %28 = load i32, i32* %x33, align 8, !dbg !103
Tracing variable defined by instruction:   %x33 = getelementptr inbounds %struct.node, %struct.node* %27, i32 0, i32 0, !dbg !103
Tracing variable defined by instruction:   %cmp49 = icmp eq i32 %conv48, 87, !dbg !131
Tracing variable defined by instruction:   %conv48 = sext i8 %39 to i32, !dbg !129
Tracing variable defined by instruction:   %cmp53 = icmp eq i32 %41, 0, !dbg !137
Tracing variable defined by instruction:   %41 = load i32, i32* %x52, align 8, !dbg !136
Tracing variable defined by instruction:   %x52 = getelementptr inbounds %struct.node, %struct.node* %40, i32 0, i32 0, !dbg !136
Tracing variable defined by instruction:   %cmp73 = icmp eq i32 %call72, 1, !dbg !167
  called function: bite
Tracing variable defined by instruction:   %call72 = call i32 @bite(%struct.node* noundef %52), !dbg !166
  called function: bite
Tracing variable defined by instruction:   %cmp = icmp eq i32 %1, %2, !dbg !38
Tracing variable defined by instruction:   %1 = load i32, i32* %x, align 8, !dbg !36
Tracing variable defined by instruction:   %x = getelementptr inbounds %struct.node, %struct.node* %0, i32 0, i32 0, !dbg !36
Tracing variable defined by instruction:   %0 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !34
	Variable originates from an alloca:   %S.addr = alloca %struct.node*, align 8
	Value has name: 1, value name: S.addr
	findDefUseChains()
  called function: destroy
  called function: move
Tracing variable defined by instruction:   %call68 = call %struct.node* @move(%struct.node* noundef %50, i8 noundef signext %51), !dbg !150
  called function: move
Tracing variable defined by instruction:   %50 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !147
Tracing variable defined by instruction:   %51 = load i8, i8* %direction.addr, align 1, !dbg !149
	Variable originates from an alloca:   %direction.addr = alloca i8, align 1
	Value has name: 1, value name: direction.addr
	findDefUseChains()
	Variable originates as a function argument: i8 %direction
	Value has name: 1, value name: direction
	findDefUseChains()
  called function: insert_head
Tracing variable defined by instruction:   %call61 = call %struct.node* @insert_head(%struct.node* noundef %45, i32 noundef %sub59, i32 noundef %49), !dbg !143
  called function: insert_head
Tracing variable defined by instruction:   %45 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !137
Tracing variable defined by instruction:   %sub59 = sub nsw i32 %47, 1, !dbg !140
Tracing variable defined by instruction:   %47 = load i32, i32* %x58, align 8, !dbg !139
Tracing variable defined by instruction:   %x58 = getelementptr inbounds %struct.node, %struct.node* %46, i32 0, i32 0, !dbg !139
Tracing variable defined by instruction:   %46 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !138
Tracing variable defined by instruction:   %49 = load i32, i32* %y60, align 4, !dbg !142
Tracing variable defined by instruction:   %y60 = getelementptr inbounds %struct.node, %struct.node* %48, i32 0, i32 1, !dbg !142
Tracing variable defined by instruction:   %48 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !141
  called function: insert_head
Tracing variable defined by instruction:   %call56 = call %struct.node* @insert_head(%struct.node* noundef %42, i32 noundef 9, i32 noundef %44), !dbg !134
  called function: insert_head
Tracing variable defined by instruction:   %42 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !131
Tracing variable defined by instruction:   %44 = load i32, i32* %y55, align 4, !dbg !133
Tracing variable defined by instruction:   %y55 = getelementptr inbounds %struct.node, %struct.node* %43, i32 0, i32 1, !dbg !133
Tracing variable defined by instruction:   %43 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !132
  called function: insert_head
Tracing variable defined by instruction:   %call44 = call %struct.node* @insert_head(%struct.node* noundef %34, i32 noundef %add42, i32 noundef %38), !dbg !118
  called function: insert_head
Tracing variable defined by instruction:   %34 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !112
Tracing variable defined by instruction:   %add42 = add nsw i32 %36, 1, !dbg !115
Tracing variable defined by instruction:   %36 = load i32, i32* %x41, align 8, !dbg !114
Tracing variable defined by instruction:   %x41 = getelementptr inbounds %struct.node, %struct.node* %35, i32 0, i32 0, !dbg !114
Tracing variable defined by instruction:   %35 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !113
Tracing variable defined by instruction:   %38 = load i32, i32* %y43, align 4, !dbg !117
Tracing variable defined by instruction:   %y43 = getelementptr inbounds %struct.node, %struct.node* %37, i32 0, i32 1, !dbg !117
Tracing variable defined by instruction:   %37 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !116
  called function: insert_head
Tracing variable defined by instruction:   %call39 = call %struct.node* @insert_head(%struct.node* noundef %31, i32 noundef 0, i32 noundef %33), !dbg !109
  called function: insert_head
Tracing variable defined by instruction:   %31 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !106
Tracing variable defined by instruction:   %33 = load i32, i32* %y38, align 4, !dbg !108
Tracing variable defined by instruction:   %y38 = getelementptr inbounds %struct.node, %struct.node* %32, i32 0, i32 1, !dbg !108
Tracing variable defined by instruction:   %32 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !107
  called function: insert_head
Tracing variable defined by instruction:   %call27 = call %struct.node* @insert_head(%struct.node* noundef %23, i32 noundef %25, i32 noundef %add), !dbg !93
  called function: insert_head
Tracing variable defined by instruction:   %23 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !87
Tracing variable defined by instruction:   %25 = load i32, i32* %x25, align 8, !dbg !89
Tracing variable defined by instruction:   %x25 = getelementptr inbounds %struct.node, %struct.node* %24, i32 0, i32 0, !dbg !89
Tracing variable defined by instruction:   %24 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !88
Tracing variable defined by instruction:   %add = add nsw i32 %27, 1, !dbg !92
Tracing variable defined by instruction:   %27 = load i32, i32* %y26, align 4, !dbg !91
Tracing variable defined by instruction:   %y26 = getelementptr inbounds %struct.node, %struct.node* %26, i32 0, i32 1, !dbg !91
Tracing variable defined by instruction:   %26 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !90
  called function: insert_head
Tracing variable defined by instruction:   %call23 = call %struct.node* @insert_head(%struct.node* noundef %20, i32 noundef %22, i32 noundef 0), !dbg !84
  called function: insert_head
Tracing variable defined by instruction:   %20 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !81
Tracing variable defined by instruction:   %22 = load i32, i32* %x22, align 8, !dbg !83
Tracing variable defined by instruction:   %x22 = getelementptr inbounds %struct.node, %struct.node* %21, i32 0, i32 0, !dbg !83
Tracing variable defined by instruction:   %21 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !82
  called function: insert_head
Tracing variable defined by instruction:   %call12 = call %struct.node* @insert_head(%struct.node* noundef %12, i32 noundef %14, i32 noundef %sub), !dbg !68
  called function: insert_head
Tracing variable defined by instruction:   %12 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !62
Tracing variable defined by instruction:   %14 = load i32, i32* %x10, align 8, !dbg !64
Tracing variable defined by instruction:   %x10 = getelementptr inbounds %struct.node, %struct.node* %13, i32 0, i32 0, !dbg !64
Tracing variable defined by instruction:   %13 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !63
Tracing variable defined by instruction:   %sub = sub nsw i32 %16, 1, !dbg !67
Tracing variable defined by instruction:   %16 = load i32, i32* %y11, align 4, !dbg !66
Tracing variable defined by instruction:   %y11 = getelementptr inbounds %struct.node, %struct.node* %15, i32 0, i32 1, !dbg !66
Tracing variable defined by instruction:   %15 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !65
  called function: insert_head
Tracing variable defined by instruction:   %call = call %struct.node* @insert_head(%struct.node* noundef %9, i32 noundef %11, i32 noundef 9), !dbg !59
  called function: insert_head
Tracing variable defined by instruction:   %9 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !56
Tracing variable defined by instruction:   %11 = load i32, i32* %x9, align 8, !dbg !58
Tracing variable defined by instruction:   %x9 = getelementptr inbounds %struct.node, %struct.node* %10, i32 0, i32 0, !dbg !58
Tracing variable defined by instruction:   %10 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !57
	Variable originates as a function argument: %struct.node* %S
	Value has name: 1, value name: S
	findDefUseChains()
Tracing variable defined by instruction:   %2 = load i32, i32* %x1.addr, align 4, !dbg !37
	Variable originates from an alloca:   %x1.addr = alloca i32, align 4
	Value has name: 1, value name: x1.addr
	findDefUseChains()
	Variable originates as a function argument: i32 %x1
	Value has name: 1, value name: x1
	findDefUseChains()
Tracing variable defined by instruction:   %cmp1 = icmp eq i32 %4, %5, !dbg !43
Tracing variable defined by instruction:   %4 = load i32, i32* %y, align 4, !dbg !41
Tracing variable defined by instruction:   %y = getelementptr inbounds %struct.node, %struct.node* %3, i32 0, i32 1, !dbg !41
Tracing variable defined by instruction:   %5 = load i32, i32* %y1.addr, align 4, !dbg !42
	Variable originates from an alloca:   %y1.addr = alloca i32, align 4
	Value has name: 1, value name: y1.addr
	findDefUseChains()
	Variable originates as a function argument: i32 %y1
	Value has name: 1, value name: y1
	findDefUseChains()
Tracing variable defined by instruction:   %cmp2 = icmp eq i32 %conv, 78, !dbg !48
Tracing variable defined by instruction:   %conv = sext i8 %6 to i32, !dbg !45
Tracing variable defined by instruction:   %cmp6 = icmp eq i32 %8, 0, !dbg !54
Tracing variable defined by instruction:   %8 = load i32, i32* %y5, align 4, !dbg !53
Tracing variable defined by instruction:   %y5 = getelementptr inbounds %struct.node, %struct.node* %7, i32 0, i32 1, !dbg !53
Tracing variable defined by instruction:   %cmp15 = icmp eq i32 %conv14, 83, !dbg !73
Tracing variable defined by instruction:   %conv14 = sext i8 %17 to i32, !dbg !71
Tracing variable defined by instruction:   %cmp19 = icmp eq i32 %19, 9, !dbg !79
Tracing variable defined by instruction:   %19 = load i32, i32* %y18, align 4, !dbg !78
Tracing variable defined by instruction:   %y18 = getelementptr inbounds %struct.node, %struct.node* %18, i32 0, i32 1, !dbg !78
Tracing variable defined by instruction:   %cmp31 = icmp eq i32 %conv30, 69, !dbg !98
Tracing variable defined by instruction:   %conv30 = sext i8 %28 to i32, !dbg !96
Tracing variable defined by instruction:   %cmp35 = icmp eq i32 %30, 9, !dbg !104
Tracing variable defined by instruction:   %30 = load i32, i32* %x34, align 8, !dbg !103
Tracing variable defined by instruction:   %x34 = getelementptr inbounds %struct.node, %struct.node* %29, i32 0, i32 0, !dbg !103
Tracing variable defined by instruction:   %cmp48 = icmp eq i32 %conv47, 87, !dbg !123
Tracing variable defined by instruction:   %conv47 = sext i8 %39 to i32, !dbg !121
Tracing variable defined by instruction:   %cmp52 = icmp eq i32 %41, 0, !dbg !129
Tracing variable defined by instruction:   %41 = load i32, i32* %x51, align 8, !dbg !128
Tracing variable defined by instruction:   %x51 = getelementptr inbounds %struct.node, %struct.node* %40, i32 0, i32 0, !dbg !128
Tracing variable defined by instruction:   %cmp71 = icmp eq i32 %call70, 1, !dbg !155
  called function: bite
Tracing variable defined by instruction:   %call70 = call i32 @bite(%struct.node* noundef %52), !dbg !154
  called function: bite
Tracing variable defined by instruction:   %cmp = icmp slt i32 %0, 10, !dbg !37
Tracing variable defined by instruction:   %0 = load i32, i32* %y, align 4, !dbg !35
	Variable originates from an alloca:   %y = alloca i32, align 4
	Value has name: 1, value name: y
	Location: /home/elizabeth/Documents/csc512/project/csc512-course-proj/test3-snake-game.c:229:14
	findDefUseChains()
Tracing variable defined by instruction:   %inc20 = add nsw i32 %18, 1, !dbg !105
Tracing variable defined by instruction:   %18 = load i32, i32* %y, align 4, !dbg !105
Tracing variable defined by instruction:   %cmp2 = icmp slt i32 %1, 10, !dbg !46
Tracing variable defined by instruction:   %1 = load i32, i32* %x, align 4, !dbg !44
	Variable originates from an alloca:   %x = alloca i32, align 4
	Value has name: 1, value name: x
	Location: /home/elizabeth/Documents/csc512/project/csc512-course-proj/test3-snake-game.c:231:18
	findDefUseChains()
Tracing variable defined by instruction:   %inc = add nsw i32 %17, 1, !dbg !99
Tracing variable defined by instruction:   %17 = load i32, i32* %x, align 4, !dbg !99
Tracing variable defined by instruction:   %cmp4 = icmp eq i32 %2, %3, !dbg !52
Tracing variable defined by instruction:   %3 = load i32, i32* %xPrey.addr, align 4, !dbg !51
	Variable originates from an alloca:   %xPrey.addr = alloca i32, align 4
	Value has name: 1, value name: xPrey.addr
	findDefUseChains()
	Variable originates as a function argument: i32 %xPrey
	Value has name: 1, value name: xPrey
	findDefUseChains()
Tracing variable defined by instruction:   %cmp5 = icmp eq i32 %4, %5, !dbg !56
Tracing variable defined by instruction:   %5 = load i32, i32* %yPrey.addr, align 4, !dbg !55
	Variable originates from an alloca:   %yPrey.addr = alloca i32, align 4
	Value has name: 1, value name: yPrey.addr
	findDefUseChains()
	Variable originates as a function argument: i32 %yPrey
	Value has name: 1, value name: yPrey
	findDefUseChains()
Tracing variable defined by instruction:   %cmp6 = icmp ne %struct.node* %7, null, !dbg !69
Tracing variable defined by instruction:   %7 = load %struct.node*, %struct.node** %temp, align 8, !dbg !68
	Variable originates from an alloca:   %temp = alloca %struct.node*, align 8
	Value has name: 1, value name: temp
	Location: /home/elizabeth/Documents/csc512/project/csc512-course-proj/test3-snake-game.c:239:24
	findDefUseChains()
Tracing variable defined by instruction:   %15 = load %struct.node*, %struct.node** %next, align 8, !dbg !87
Tracing variable defined by instruction:   %next = getelementptr inbounds %struct.node, %struct.node* %14, i32 0, i32 2, !dbg !87
Tracing variable defined by instruction:   %14 = load %struct.node*, %struct.node** %temp, align 8, !dbg !86
Tracing variable defined by instruction:   %6 = load %struct.node*, %struct.node** %S.addr, align 8, !dbg !64
	Variable originates from an alloca:   %S.addr = alloca %struct.node*, align 8
	Value has name: 1, value name: S.addr
	findDefUseChains()
	Variable originates as a function argument: %struct.node* %S
	Value has name: 1, value name: S
	findDefUseChains()
Tracing variable defined by instruction:   %cmp8 = icmp eq i32 %9, %10, !dbg !75
Tracing variable defined by instruction:   %9 = load i32, i32* %x7, align 8, !dbg !73
Tracing variable defined by instruction:   %x7 = getelementptr inbounds %struct.node, %struct.node* %8, i32 0, i32 0, !dbg !73
Tracing variable defined by instruction:   %cmp11 = icmp eq i32 %12, %13, !dbg !80
Tracing variable defined by instruction:   %12 = load i32, i32* %y10, align 4, !dbg !78
Tracing variable defined by instruction:   %y10 = getelementptr inbounds %struct.node, %struct.node* %11, i32 0, i32 1, !dbg !78
Tracing variable defined by instruction:   %tobool = icmp ne i32 %16, 0, !dbg !92
Tracing variable defined by instruction:   %16 = load i32, i32* %snakeFound, align 4, !dbg !92
	Variable originates from an alloca:   %snakeFound = alloca i32, align 4
	Value has name: 1, value name: snakeFound
	Location: /home/elizabeth/Documents/csc512/project/csc512-course-proj/test3-snake-game.c:240:21
	findDefUseChains()
Tracing variable defined by instruction:   %cmp = icmp eq i32 %4, %5, !dbg !53
Tracing variable defined by instruction:   %4 = load i32, i32* %x, align 8, !dbg !51
Tracing variable defined by instruction:   %x = getelementptr inbounds %struct.node, %struct.node* %3, i32 0, i32 0, !dbg !51
Tracing variable defined by instruction:   %3 = load %struct.node*, %struct.node** %snake, align 8, !dbg !49
	Variable originates from an alloca:   %snake = alloca %struct.node*, align 8
	Value has name: 1, value name: snake
	Location: /home/elizabeth/Documents/csc512/project/csc512-course-proj/test3-snake-game.c:264:12
	findDefUseChains()
  called function: destroy
  called function: move
Tracing variable defined by instruction:   %call15 = call %struct.node* @move(%struct.node* noundef %13, i8 noundef signext %14), !dbg !77
  called function: move
Tracing variable defined by instruction:   %13 = load %struct.node*, %struct.node** %snake, align 8, !dbg !74
Tracing variable defined by instruction:   %14 = load i8, i8* %direction, align 1, !dbg !76
	Variable originates from an alloca:   %direction = alloca i8, align 1
	Value has name: 1, value name: direction
	Location: /home/elizabeth/Documents/csc512/project/csc512-course-proj/test3-snake-game.c:272:9
	findDefUseChains()
  called function: __isoc99_scanf
	  --- SEMINAL INPUT ---
	   Value originates from scanf:   %call6 = call i32 (i8*, ...) @__isoc99_scanf(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i8* noundef %direction), !dbg !48 --
  called function: gain
Tracing variable defined by instruction:   %call10 = call %struct.node* @gain(%struct.node* noundef %9, i32 noundef %10, i32 noundef %11, i8 noundef signext %12), !dbg !65
  called function: gain
Tracing variable defined by instruction:   %9 = load %struct.node*, %struct.node** %snake, align 8, !dbg !60
Tracing variable defined by instruction:   %10 = load i32, i32* %prey_x, align 4, !dbg !62
	Variable originates from an alloca:   %prey_x = alloca i32, align 4
	Value has name: 1, value name: prey_x
	Location: /home/elizabeth/Documents/csc512/project/csc512-course-proj/test3-snake-game.c:265:9
	findDefUseChains()
Tracing variable defined by instruction:   %rem12 = srem i32 %call11, 10, !dbg !68
  called function: rand
Tracing variable defined by instruction:   %call11 = call i32 @rand() #5, !dbg !67
  called function: rand
Tracing variable defined by instruction:   %rem = srem i32 %call2, 10, !dbg !33
  called function: rand
Tracing variable defined by instruction:   %call2 = call i32 @rand() #5, !dbg !32
  called function: rand
Tracing variable defined by instruction:   %11 = load i32, i32* %prey_y, align 4, !dbg !63
	Variable originates from an alloca:   %prey_y = alloca i32, align 4
	Value has name: 1, value name: prey_y
	Location: /home/elizabeth/Documents/csc512/project/csc512-course-proj/test3-snake-game.c:266:9
	findDefUseChains()
Tracing variable defined by instruction:   %rem14 = srem i32 %call13, 10, !dbg !71
  called function: rand
Tracing variable defined by instruction:   %call13 = call i32 @rand() #5, !dbg !70
  called function: rand
Tracing variable defined by instruction:   %rem4 = srem i32 %call3, 10, !dbg !37
  called function: rand
Tracing variable defined by instruction:   %call3 = call i32 @rand() #5, !dbg !36
  called function: rand
  called function: insert_head
Tracing variable defined by instruction:   %call1 = call %struct.node* @insert_head(%struct.node* noundef null, i32 noundef 5, i32 noundef 5), !dbg !29
  called function: insert_head
Tracing variable defined by instruction:   %cmp8 = icmp eq i32 %7, %8, !dbg !58
Tracing variable defined by instruction:   %7 = load i32, i32* %y, align 4, !dbg !56
Tracing variable defined by instruction:   %y = getelementptr inbounds %struct.node, %struct.node* %6, i32 0, i32 1, !dbg !56
Tracing variable defined by instruction:   %tobool = icmp ne i32 %call16, 0, !dbg !81
  called function: bite
Tracing variable defined by instruction:   %call16 = call i32 @bite(%struct.node* noundef %15), !dbg !81
  called function: bite
